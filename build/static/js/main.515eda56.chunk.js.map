{"version":3,"sources":["components/styled-components/App.js","components/styled-components/Navbar.js","components/Navbar.js","components/styled-components/TaskModal.js","components/TaskModal.js","components/styled-components/TaskList.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["AppWrapper","styled","div","_templateObject","NavWrapper","Navbar_templateObject","NavContentContainer","_templateObject2","AddButton","button","_templateObject3","NavText","h1","_templateObject4","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","taskModal","react_default","a","createElement","className","onClick","toggle","Component","keyframes","TaskModal_templateObject","Modal","TaskModal_templateObject2","ModalWrapper","TaskModal_templateObject3","CategoryWrapper","TaskModal_templateObject4","PriorityWrapper","_templateObject5","DescriptionWrapper","_templateObject6","InfoWrapper","_templateObject7","ButtonWrapper","_templateObject8","ModalButton","_templateObject9","InputText","p","_templateObject10","InputBox","input","_templateObject11","height","width","TextBox","textarea","_templateObject12","SelectWrapper","select","_templateObject13","Option","option","_templateObject14","TaskModal","taskCategories","priorities","_this2","_this$props","category","priority","task","update","info","value","name","onChange","e","handleChange","defaultValue","disabled","hidden","map","i","key","handleUpdate","handleSubmit","handleDelete","TaskListWrapper","TaskList_templateObject","TaskWrapper","TaskList_templateObject2","TaskInfoWrapper","TaskList_templateObject3","TaskText","TaskList_templateObject4","TaskLabel","label","TaskList_templateObject5","TaskList","taskArr","id","react_switch_default","handleToggleCheck","checked","complete","taskClick","App","toggleModal","setState","event","defineProperty","target","_this$state","axios","post","then","res","data","preventDefault","_this$state2","arr","filter","el","get","components_TaskModal","assign","components_Navbar","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.515eda56.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n    min-height: 100vh;\n    background-color: lightgray;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`","import styled from 'styled-components';\n\nexport const NavWrapper = styled.div`\n    width: 100vw;\n    height: 100px;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n`\nexport const NavContentContainer = styled.div`\n    max-width: 800px;\n    width: calc(100vw - 48px);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const AddButton = styled.button`\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    border-radius: 25px;\n    border: 1px solid gray;\n    background-color: gray;\n    font-weight: bolder;\n    font-size: 18px;\n    color: white;\n    cursor: pointer;\n    &:focus {\n        outline: 0;\n    }\n`\nexport const NavText = styled.h1`\n    color: white;\n    margin: auto;\n`","import React, { Component } from 'react';\nimport {NavWrapper, AddButton, NavText, NavContentContainer} from './styled-components/Navbar';\n\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            taskModal: false,\n        }\n    }\n    render(){\n        return(\n            <NavWrapper className=\"nav-wrapper\">\n                <NavContentContainer className=\"nav-content-container\">\n                    <NavText className=\"nav-text\">Workfront Todo List</NavText>\n                    <AddButton className=\"add-button\" onClick={this.props.toggle}>Add</AddButton>\n                </NavContentContainer>\n            </NavWrapper>\n        )\n    }\n}\n\nexport default Navbar;","import styled, {keyframes} from 'styled-components';\n\nconst slideIn = keyframes`\n    0% {\n    transform: translateX(0);\n    }\n    100% {\n        transform: translateX(100%);\n    }\n`\n\nexport const Modal = styled.div`\n    height: 50vh;\n    width: 50vw;\n    background-color: white;\n    border: 1px solid black;\n    position: fixed;\n    top: calc(50vh/2);\n    left: calc(-50vw);\n    box-sizing: border-box;\n    transform: ${props => props.taskModal && 'translateX(75vw)'};\n    transition: transform .3s ease-in-out;\n    z-index: 2;\n`\n\nexport const ModalWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 24px;\n`\n\nexport const CategoryWrapper = styled.div`\n\n`\nexport const PriorityWrapper = styled.div`\n\n`\nexport const DescriptionWrapper = styled.div`\n\n`\nexport const InfoWrapper = styled.div`\n\n`\nexport const ButtonWrapper = styled.div`\n\n`\nexport const ModalButton = styled.button`\n    width: 100px;\n    height: 30px;\n    border-radius: 4px;\n    background-color: #039EFC;\n    &:disabled{\n        background-color: lightgray;\n    }\n`\nexport const InputText = styled.p`\n    font-size: 16px;\n`\nexport const InputBox = styled.input`\n    height: ${props => props.height ? props.height : 'initial'};\n    width: ${props => props.width ? props.width : 'initial'};\n`\nexport const TextBox = styled.textarea`\n    border: 1px solid black;\n    height: ${props => props.height ? props.height : 'initial'};\n    width: ${props => props.width ? props.width : 'initial'};\n    resize: none;\n`\nexport const SelectWrapper = styled.select`\n\n`\nexport const Option = styled.option`\n\n`","import React, { Component } from 'react';\nimport {Modal, ModalForm, ModalWrapper, CategoryWrapper, DescriptionWrapper, InfoWrapper, ButtonWrapper, ModalButton, InputText, InputBox, SelectWrapper, Option, PriorityWrapper, TextBox} from './styled-components/TaskModal';\n\nclass TaskModal extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            taskCategories: ['Work', 'Personal', 'Shopping'],\n            priorities: ['Low', 'Medium', 'High'],\n        }\n    }\n    \n    render(){\n        let {category, priority, update, task, info} = this.props;\n        return(\n            <Modal taskModal={this.props.taskModal} className=\"modal\">\n                <ModalWrapper>\n                    <CategoryWrapper>\n                        <InputText>Category: </InputText>\n                        <SelectWrapper value={this.props.category} name=\"category\" onChange={(e) => this.props.handleChange(e)}>\n                            <Option defaultValue=\"\" disabled hidden/>\n                            {this.state.taskCategories.map((e, i) => {\n                                return <Option key={i}>{e}</Option>\n                            })}\n                        </SelectWrapper>\n                    </CategoryWrapper>\n                    <PriorityWrapper>\n                        <InputText>Priority: </InputText>\n                        <SelectWrapper value={this.props.priority} name=\"priority\" onChange={(e) => this.props.handleChange(e)}>\n                            <Option defaultValue=\"\" disabled hidden/>\n                            {this.state.priorities.map((e,i) => {\n                                return <Option key={i}>{e}</Option>\n                            })}\n                        </SelectWrapper>\n                    </PriorityWrapper>\n                    <DescriptionWrapper>\n                        <InputText>Task: </InputText>\n                        <InputBox value={this.props.task} name=\"task\" width={'100%'} onChange={(e) => this.props.handleChange(e)}/>\n                    </DescriptionWrapper>\n                    <InfoWrapper>\n                        <InputText>Additional Info</InputText>\n                        <TextBox  value={this.props.info} name=\"info\" height={\"100px\"} width={'100%'} onChange={(e) => this.props.handleChange(e)}/>\n                    </InfoWrapper>\n                    <ButtonWrapper className=\"button-wrapper\">\n                        {this.props.update ? \n                            <ModalButton className=\"submit\" disabled={!category || !task || !priority ? true : false} onClick={this.props.handleUpdate}>\n                            Update Task\n                            </ModalButton> :\n                            <ModalButton className=\"update\" disabled={(!category || !task || !priority ? true : false)} onClick={this.props.handleSubmit}>\n                            Add Task\n                            </ModalButton>}\n                        {this.props.update && <ModalButton onClick={this.props.handleDelete}>Delete</ModalButton>}\n                    </ButtonWrapper>\n                </ModalWrapper>\n            </Modal>\n        )\n    }\n}\n\nexport default TaskModal;","import styled from 'styled-components';\n\nexport const TaskListWrapper = styled.div`\n    min-height: calc(100vh - 100px);\n    max-width: 800px;\n    width: 100%;\n    background: lightgray;\n    border: 1px solid black;\n`\n\nexport const TaskWrapper = styled.div`\n    box-sizing: border-box;\n    height: 35px;\n    width: 100%;\n    border: 1px solid black;\n    display: flex;\n    align-items: center;\n    padding: 0 25px;\n`\nexport const TaskInfoWrapper = styled.div`\n    width: 100%;\n    cursor: pointer;\n`\nexport const TaskText = styled.p`\n    line-height: 35px;\n    margin-left: 20px;\n`\nexport const TaskLabel = styled.label`\n    display: flex;\n`","import React, { Component } from 'react';\nimport {TaskListWrapper, TaskWrapper, TaskText, TaskInfoWrapper, TaskLabel} from './styled-components/TaskList';\nimport Switch from \"react-switch\";\n\nclass TaskList extends Component{\n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <TaskListWrapper className=\"task-list-wrapper\">\n                {this.props.taskArr.map((e,i) => {\n                    return(\n                        <TaskWrapper className=\"task-wrapper\" name={e.id} /*onClick={() => this.props.taskClick(e.id)}*/>\n                            <TaskLabel className=\"task-label\">\n                                <Switch \n                                    id={e.id}\n                                    onChange={this.props.handleToggleCheck} \n                                    checked={e.complete} />\n                            </TaskLabel>\n                            <TaskInfoWrapper \n                                className=\"task-info-wrapper\"\n                                onClick={() => this.props.taskClick(e.id)}>\n                                <TaskText className=\"task-text\">{e.task}</TaskText>\n                            </TaskInfoWrapper>\n                        </TaskWrapper>\n                    )\n                })}\n            </TaskListWrapper>\n        )\n    }\n}\n\nexport default TaskList","import React, { Component } from 'react';\n// import axios from 'axios';\nimport axios from 'axios';\nimport {AppWrapper} from './components/styled-components/App';\nimport Navbar from './components/Navbar';\nimport TaskModal from './components/TaskModal';\nimport TaskList from './components/TaskList';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            taskModal: false,\n            taskArr: [],\n            category: '',\n            priority: '',\n            task: '',\n            info: '',\n            id: '',\n            update: false\n        }\n    }\n    componentDidMount(){\n        axios.get('/getDataArr').then(res => this.setState({taskArr: res.data}))\n    }\n\n    toggleModal = () => this.setState({taskModal: !this.state.taskModal})\n\n    handleChange = (event) => {this.setState({[event.target.name]: event.target.value});}\n\n    handleSubmit = (event) => {\n            let {category, priority, info, task, taskArr} = this.state;\n            axios.post('/addTask', {category, priority, info, task, complete: false}).then(res => {\n                this.setState({\n                    taskArr: res.data,\n                    category: '',\n                    priority: '',\n                    info: '',\n                    task: ''\n                })\n            })\n            this.toggleModal();\n            event.preventDefault();\n    }\n    handleToggleCheck = (checked, event , id) => {\n        axios.post('/toggleTask', {id, checked}).then(res => this.setState({taskArr: res.data}))\n    }\n    handleUpdate = () => {\n        let {id, task, info, priority, category} = this.state;\n        axios.post('/updateTask', {id, task, info, priority, category}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    handleDelete = () => {\n        axios.post('/deleteTask', {id: this.state.id}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    taskClick = (id) => {\n        let arr = this.state.taskArr.filter((el) => el.id === id)\n            this.setState({\n                category: arr[0].category,\n                priority: arr[0].priority,\n                task: arr[0].task,\n                info: arr[0].info,\n                id: arr[0].id,\n                update: true\n            }, this.toggleModal())\n    }\n    render(){\n        return(\n        <AppWrapper className=\"app-wrapper\">\n            <TaskModal \n                className=\"task-modal\"\n                {...this.state} \n                toggle={this.toggleModal} \n                handleChange={this.handleChange} \n                handleSubmit={this.handleSubmit} \n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}/>\n            <Navbar className=\"navbar\" toggle={this.toggleModal}/>\n            <TaskList \n                className=\"task-list\" \n                taskArr={this.state.taskArr} \n                taskClick={this.taskClick}\n                handleToggleCheck={this.handleToggleCheck}/>\n        </AppWrapper>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}