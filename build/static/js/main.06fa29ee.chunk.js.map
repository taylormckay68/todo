{"version":3,"sources":["components/styled-components/App.js","components/styled-components/Navbar.js","components/Navbar.js","components/styled-components/TaskModal.js","components/TaskModal.js","components/styled-components/TaskList.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["AppWrapper","styled","div","_templateObject","TaskCover","_templateObject2","props","taskModal","NavWrapper","Navbar_templateObject","NavContentContainer","Navbar_templateObject2","AddButton","button","_templateObject3","NavText","h1","_templateObject4","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","onClick","toggle","Component","Modal","TaskModal_templateObject","ModalWrapper","TaskModal_templateObject2","CategoryWrapper","TaskModal_templateObject3","PriorityWrapper","TaskModal_templateObject4","DescriptionWrapper","_templateObject5","InfoWrapper","_templateObject6","ButtonWrapper","_templateObject7","ModalButton","_templateObject8","InputText","p","_templateObject9","width","TextBox","textarea","_templateObject10","height","customStyles","control","provided","objectSpread","background","isFocused","border","border-radius","box-shadow","min-height","valueContainer","color","font-size","padding","dropdownIndicator","indicatorSeparator","display","menu","option","isHovered","background-color","isSelected","&:hover","TaskModal","taskCategories","priorities","_this2","_this$props","category","priority","task","update","info","react_select_esm","options","value","label","styles","onChange","e","handleDropdownChange","name","handleTextChange","disabled","handleUpdate","handleSubmit","handleDelete","TaskListWrapper","TaskList_templateObject","TaskWrapper","TaskList_templateObject2","TaskInfoWrapper","TaskList_templateObject3","complete","TaskText","TaskList_templateObject4","CategoryText","TaskList_templateObject5","InfoText","TaskList_templateObject6","TaskLabel","TaskList_templateObject7","HeaderWrapper","TaskList_templateObject8","CategoryHeader","TaskList_templateObject9","TaskHeader","TaskList_templateObject10","InfoHeader","_templateObject11","TaskList","taskArr","map","i","id","react_switch_default","handleToggleCheck","checked","taskClick","App","toggleModal","setState","event","console","log","defineProperty","target","_this$state","axios","post","then","res","data","preventDefault","_this$state2","arr","filter","el","get","components_TaskModal","assign","components_Navbar","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06fa29ee.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n    min-height: 100vh;\n    background-color: lightgray;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const TaskCover = styled.div`\n    height: 100vh;\n    width: 100vw;\n    background-color: black;\n    opacity: .2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    transform: ${props => !props.taskModal && 'translateX(-125vw)'};\n    transition: transform .3s ease-in-out;\n\n`","import styled from 'styled-components';\n\nexport const NavWrapper = styled.div`\n    width: 100vw;\n    height: 100px;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n`\nexport const NavContentContainer = styled.div`\n    max-width: 800px;\n    width: calc(100vw - 48px);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const AddButton = styled.button`\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    border-radius: 25px;\n    border: 1px solid gray;\n    background-color: gray;\n    font-weight: bolder;\n    font-size: 18px;\n    color: white;\n    cursor: pointer;\n    &:focus {\n        outline: 0;\n    }\n`\nexport const NavText = styled.h1`\n    color: white;\n    margin: auto;\n    font-size: 35px;\n`","import React, { Component } from 'react';\nimport {NavWrapper, AddButton, NavText, NavContentContainer} from './styled-components/Navbar';\n\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            taskModal: false,\n        }\n    }\n    render(){\n        return(\n            <NavWrapper className=\"nav-wrapper\">\n                <NavContentContainer className=\"nav-content-container\">\n                    <NavText className=\"nav-text\">Workfront To-do List</NavText>\n                    <AddButton className=\"add-button\" onClick={this.props.toggle}>Add</AddButton>\n                </NavContentContainer>\n            </NavWrapper>\n        )\n    }\n}\n\nexport default Navbar;","import styled, {keyframes} from 'styled-components';\nimport ReactSelect from 'react-select';\n\nexport const Modal = styled.div`\n    height: 285px;\n    width: 90vw;\n    background-color: white;\n    border: 1px solid black;\n    border-radius: 4px;\n    position: fixed;\n    box-sizing: border-box;\n    transform: ${props => !props.taskModal && 'translateX(-125vw)'};\n    transition: transform .3s ease-in-out;\n    z-index: 2;\n    @media(min-width: 500px) {\n        width: 500px;\n    }\n`\n\nexport const ModalWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    height: 100%;\n    box-sizing: border-box;\n    align-content: space-around;\n    padding: 12px;\n`\n\nexport const CategoryWrapper = styled.div`\n    display: flex;\n`\nexport const PriorityWrapper = styled.div`\n    display: flex;\n`\nexport const DescriptionWrapper = styled.div`\n\n`\nexport const InfoWrapper = styled.div`\n\n`\nexport const ButtonWrapper = styled.div`\n\n`\nexport const ModalButton = styled.button`\n    width: 100px;\n    height: 30px;\n    border-radius: 2px;\n    background-color: #039EFC;\n    &:disabled{\n        background-color: lightgray;\n    }\n`\nexport const InputText = styled.p`\n    font-size: 16px;\n    width: ${props => props.width ? props.width : '80px'};\n`\nexport const TextBox = styled.textarea`\n    border: 1px solid black;\n    height: ${props => props.height ? props.height : 'initial'};\n    width: ${props => props.width ? props.width : 'initial'};\n    resize: none;\n    box-sizing: border-box;\n    border-radius: 2px;\n`\nexport const customStyles = {\n    control: (provided, state) => ({\n        ...provided,\n        background: state.isFocused ? '#CED1D5' : '#E7E8EA',\n        border: '0',\n        width: '175px',\n        'border-radius': '2px',\n        'box-shadow': 'none',\n        'min-height': '23px'\n    }),\n    valueContainer: provided => ({\n        ...provided,\n        color: '#2f3337',\n        'font-size': '14px',\n        padding: '0 0 0 12px'\n    }),\n    dropdownIndicator: provided => ({\n        ...provided,\n        color: '#2f3337',\n        padding: '0 16px'\n    }),\n    indicatorSeparator: () => ({\n        display: 'none'\n    }),\n    menu: provided => ({\n        ...provided,\n        color: '#2f3337',\n        'border-radius': '2px',\n        'box-shadow': '0 1px 3px rgba(0, 0, 0, 0.2)'\n    }),\n    option: (provided, state) => ({\n        ...provided,\n        color: state.isHovered ? 'white' : '#2f3337',\n        'background-color': state.isSelected ? '#F0F7FA' : 'white',\n        '&:hover': {\n            'background-color': '#0485CC',\n            color: 'white'\n        }\n    })\n};","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport {Modal, ModalWrapper, CategoryWrapper, DescriptionWrapper, InfoWrapper, ButtonWrapper, ModalButton, InputText, PriorityWrapper, TextBox, customStyles} from './styled-components/TaskModal';\n\nclass TaskModal extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            taskCategories: ['Work', 'Personal', 'Shopping'],\n            priorities: ['Low', 'Medium', 'High'],\n        }\n    }\n    \n    render(){\n        let {category, priority, update, task, info} = this.props;\n        const catOptions = [\n            {value: 'Work', label: 'Work'},\n            {value: 'Personal', label: 'Personal'},\n            {value: 'Shopping', label: 'Shopping'}\n        ];\n        const priorityOptions = [\n            {value: 'Low', label: 'Low'},\n            {value: 'Medium', label: 'Medium'},\n            {value: 'High', label: 'High'}\n        ];\n\n        return(\n            <Modal taskModal={this.props.taskModal} className=\"modal\">\n                <ModalWrapper className=\"modal-wrapper\">\n                    <CategoryWrapper className=\"category-wrapper\">\n                        <InputText className=\"input-text\">Category: </InputText>\n                        <Select \n                            options={catOptions} \n                            styles={customStyles} \n                            onChange={(e) => this.props.handleDropdownChange(e, 'category')}/>\n                    </CategoryWrapper>\n                    <PriorityWrapper className=\"priority-wrapper\">\n                        <InputText className=\"input-text\">Priority: </InputText>\n                        <Select \n                            options={priorityOptions} \n                            styles={customStyles}\n                            onChange={(e) => this.props.handleDropdownChange(e, 'priority')}/>\n                    </PriorityWrapper>\n                    <DescriptionWrapper className=\"description-wrapper\">\n                        <InputText className=\"input-text\">Task: </InputText>\n                        <TextBox \n                            className=\"input-box\"\n                            value={this.props.task} \n                            name=\"task\" \n                            width={'100%'} \n                            height={'16px'}\n                            onChange={(e) => this.props.handleTextChange(e)}/>\n                    </DescriptionWrapper>\n                    <InfoWrapper className=\"info-wrapper\">\n                        <InputText className=\"input-text\" width='105px'>Additional Info</InputText>\n                        <TextBox \n                            className=\"text-box\" \n                            value={this.props.info} \n                            name=\"info\" \n                            height={\"100px\"} \n                            width={'100%'} \n                            onChange={(e) => this.props.handleTextChange(e)}/>\n                    </InfoWrapper>\n                    <ButtonWrapper className=\"button-wrapper\">\n                        {this.props.update ? \n                            <ModalButton className=\"submit\" disabled={!category || !task || !priority ? true : false} onClick={this.props.handleUpdate}>\n                            Update Task\n                            </ModalButton> :\n                            <ModalButton className=\"update\" disabled={(!category || !task || !priority ? true : false)} onClick={this.props.handleSubmit}>\n                            Add Task\n                            </ModalButton>}\n                        {this.props.update && <ModalButton onClick={this.props.handleDelete}>Delete</ModalButton>}\n                    </ButtonWrapper>\n                </ModalWrapper>\n            </Modal>\n        )\n    }\n}\n\nexport default TaskModal;","import styled from 'styled-components';\n\nexport const TaskListWrapper = styled.div`\n    min-height: calc(100vh - 100px);\n    max-width: 800px;\n    width: 100%;\n    background: lightgray;\n`\n\nexport const TaskWrapper = styled.div`\n    box-sizing: border-box;\n    height: 35px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    /* padding: 0 10px; */\n`\nexport const TaskInfoWrapper = styled.div`\n    width: 100%;\n    cursor: pointer;\n    display: flex;\n    opacity: ${props => props.complete && '.4'};\n`\nexport const TaskText = styled.p`\n    line-height: 35px;\n    margin-left: 10px;\n    width: calc(100vw - 168px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media (min-width: 450px) {\n        width: calc((100vw - 178px)/2);\n    }\n    @media (min-width: 800px) {\n        width: calc((800px - 178px)/2);\n    }\n`\nexport const CategoryText = styled.p`\n    width: 72px;\n    line-height: 35px;\n    margin-left: 10px;\n`\nexport const InfoText = styled.p`\n    line-height: 35px;\n    margin-left: 10px;\n    width: calc((100% - 106px)/2);\n    display: none;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media (min-width: 450px) {\n        display: block;\n        width: calc((100vw - 178px)/2);\n    }\n    @media (min-width: 800px) {\n        width: calc((800px - 178px)/2);\n    }\n`\nexport const TaskLabel = styled.label`\n    display: flex;\n    margin-left: 10px;\n`\nexport const HeaderWrapper = styled.div`\n    height: 35px;\n    background-color: lightgray;\n    display: flex;\n`\nexport const CategoryHeader = styled.div`\n    margin-left: 76px;\n    width: 72px;\n    line-height: 35px;\n    border-bottom: 1px solid;\n`\nexport const TaskHeader = styled.div`\n    width: calc(100vw - 168px);\n    line-height: 35px;\n    margin-left: 10px;\n    border-bottom: 1px solid;\n    @media (min-width: 450px) {\n        width: calc(50% - 89px);\n    }\n`\nexport const InfoHeader = styled.div`\n    /* width: calc((100% - 197px)/2); */\n    line-height: 35px;\n    margin-left: 10px;\n    display: none;\n    border-bottom: 1px solid;\n    @media (min-width: 450px) {\n        display: block;\n        width: calc(50% - 89px);\n    }\n`","import React, { Component } from 'react';\nimport {TaskListWrapper, TaskWrapper, TaskText, TaskInfoWrapper, TaskLabel, CategoryText, InfoText, HeaderWrapper, CategoryHeader, InfoHeader, TaskHeader} from './styled-components/TaskList';\nimport Switch from \"react-switch\";\n\nclass TaskList extends Component{\n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <TaskListWrapper className=\"task-list-wrapper\">\n                <HeaderWrapper className=\"header-wrapper\">\n                    <CategoryHeader className=\"category-header\">Category</CategoryHeader>\n                    <TaskHeader className=\"task-header\">Task</TaskHeader>\n                    <InfoHeader className=\"info-header\">Additional Info</InfoHeader>\n                </HeaderWrapper>\n                {this.props.taskArr.map((e,i) => {\n                    return(\n                        <TaskWrapper className=\"task-wrapper\" name={e.id} /*onClick={() => this.props.taskClick(e.id)}*/>\n                            <TaskLabel className=\"task-label\">\n                                <Switch \n                                    id={e.id}\n                                    onChange={this.props.handleToggleCheck} \n                                    checked={e.complete} />\n                            </TaskLabel>\n                            <TaskInfoWrapper \n                                className=\"task-info-wrapper\"\n                                complete={e.complete}\n                                onClick={() => this.props.taskClick(e.id)}>\n                                <CategoryText className=\"category-text\">{e.category}</CategoryText>\n                                <TaskText className=\"task-text\">{e.task}</TaskText>\n                                <InfoText className=\"info-text\">{e.info}</InfoText>\n                            </TaskInfoWrapper>\n                        </TaskWrapper>\n                    )\n                })}\n            </TaskListWrapper>\n        )\n    }\n}\n\nexport default TaskList","import React, { Component } from 'react';\n// import axios from 'axios';\nimport axios from 'axios';\nimport {AppWrapper, TaskCover} from './components/styled-components/App';\nimport Navbar from './components/Navbar';\nimport TaskModal from './components/TaskModal';\nimport TaskList from './components/TaskList';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            taskModal: false,\n            taskArr: [],\n            category: '',\n            priority: '',\n            task: '',\n            info: '',\n            id: '',\n            update: false\n        }\n    }\n    componentDidMount(){\n        axios.get('/getDataArr').then(res => this.setState({taskArr: res.data}))\n    }\n\n    toggleModal = () => this.setState({\n        taskModal: !this.state.taskModal,\n        category: '',\n        priority: '',\n        info: '',\n        task: '',\n        id: '',\n        update: false\n    })\n\n    handleDropdownChange = (event, name) => {\n        console.log(event, name);\n        this.setState({[name]: event.value});\n    }\n    handleTextChange = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit = (event) => {\n            let {category, priority, info, task, taskArr} = this.state;\n            axios.post('/addTask', {category, priority, info, task, complete: false}).then(res => {\n                this.setState({\n                    taskArr: res.data,\n                    category: '',\n                    priority: '',\n                    info: '',\n                    task: ''\n                })\n            })\n            this.toggleModal();\n            event.preventDefault();\n    }\n    handleToggleCheck = (checked, event , id) => {\n        axios.post('/toggleTask', {id, checked}).then(res => this.setState({taskArr: res.data}))\n    }\n    handleUpdate = () => {\n        let {id, task, info, priority, category} = this.state;\n        axios.post('/updateTask', {id, task, info, priority, category}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    handleDelete = () => {\n        axios.post('/deleteTask', {id: this.state.id}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    taskClick = (id) => {\n        let arr = this.state.taskArr.filter((el) => el.id === id)\n            this.setState({\n                category: arr[0].category,\n                priority: arr[0].priority,\n                task: arr[0].task,\n                info: arr[0].info,\n                id: arr[0].id,\n                update: true\n            }, this.toggleModal())\n    }\n    render(){\n        return(\n        <AppWrapper className=\"app-wrapper\">\n            <TaskCover \n                className=\"task-cover\"\n                onClick={this.toggleModal}\n                taskModal={this.state.taskModal}/>\n            <TaskModal \n                className=\"task-modal\"\n                {...this.state} \n                toggle={this.toggleModal} \n                handleDropdownChange={this.handleDropdownChange} \n                handleTextChange={this.handleTextChange}\n                handleSubmit={this.handleSubmit} \n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}/>\n            <Navbar className=\"navbar\" toggle={this.toggleModal}/>\n            <TaskList \n                className=\"task-list\"\n                taskArr={this.state.taskArr} \n                taskClick={this.taskClick}\n                handleToggleCheck={this.handleToggleCheck}/>\n        </AppWrapper>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}