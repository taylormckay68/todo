{"version":3,"sources":["components/styled-components/App.js","components/styled-components/Navbar.js","components/Navbar.js","components/styled-components/TaskModal.js","components/TaskModal.js","components/styled-components/TaskList.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["AppWrapper","styled","div","_templateObject","TaskCover","_templateObject2","props","taskModal","NavWrapper","Navbar_templateObject","NavContentContainer","Navbar_templateObject2","AddButton","button","_templateObject3","NavText","h1","_templateObject4","Navbar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","onClick","toggle","Component","Modal","TaskModal_templateObject","ModalWrapper","TaskModal_templateObject2","CategoryWrapper","TaskModal_templateObject3","PriorityWrapper","TaskModal_templateObject4","DescriptionWrapper","_templateObject5","InfoWrapper","_templateObject6","ButtonWrapper","_templateObject7","ModalButton","_templateObject8","InputText","p","_templateObject9","TextBox","input","_templateObject10","height","width","textarea","_templateObject11","SelectWrapper","select","_templateObject12","Option","option","_templateObject13","TaskModal","taskCategories","priorities","_this2","_this$props","category","priority","task","update","info","value","name","onChange","e","handleChange","defaultValue","disabled","hidden","map","i","key","handleUpdate","handleSubmit","handleDelete","TaskListWrapper","TaskList_templateObject","TaskWrapper","TaskList_templateObject2","TaskInfoWrapper","TaskList_templateObject3","TaskText","TaskList_templateObject4","CategoryText","TaskList_templateObject5","InfoText","TaskList_templateObject6","TaskLabel","label","TaskList_templateObject7","HeaderWrapper","TaskList_templateObject8","CategoryHeader","TaskList_templateObject9","TaskHeader","TaskList_templateObject10","InfoHeader","TaskList_templateObject11","TaskList","taskArr","id","react_switch_default","handleToggleCheck","checked","complete","taskClick","App","toggleModal","setState","event","defineProperty","target","_this$state","axios","post","then","res","data","preventDefault","_this$state2","arr","filter","el","get","components_TaskModal","assign","components_Navbar","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e80403d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n    min-height: 100vh;\n    background-color: lightgray;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const TaskCover = styled.div`\n    height: 100vh;\n    width: 100vw;\n    background-color: black;\n    opacity: .2;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: fixed;\n    transform: ${props => !props.taskModal && 'translateX(-125vw)'};\n    transition: transform .3s ease-in-out;\n\n`","import styled from 'styled-components';\n\nexport const NavWrapper = styled.div`\n    width: 100vw;\n    height: 100px;\n    background-color: black;\n    display: flex;\n    justify-content: center;\n`\nexport const NavContentContainer = styled.div`\n    max-width: 800px;\n    width: calc(100vw - 48px);\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const AddButton = styled.button`\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    border-radius: 25px;\n    border: 1px solid gray;\n    background-color: gray;\n    font-weight: bolder;\n    font-size: 18px;\n    color: white;\n    cursor: pointer;\n    &:focus {\n        outline: 0;\n    }\n`\nexport const NavText = styled.h1`\n    color: white;\n    margin: auto;\n    font-size: 35px;\n`","import React, { Component } from 'react';\nimport {NavWrapper, AddButton, NavText, NavContentContainer} from './styled-components/Navbar';\n\n\nclass Navbar extends Component{\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            taskModal: false,\n        }\n    }\n    render(){\n        return(\n            <NavWrapper className=\"nav-wrapper\">\n                <NavContentContainer className=\"nav-content-container\">\n                    <NavText className=\"nav-text\">Workfront To-do List</NavText>\n                    <AddButton className=\"add-button\" onClick={this.props.toggle}>Add</AddButton>\n                </NavContentContainer>\n            </NavWrapper>\n        )\n    }\n}\n\nexport default Navbar;","import styled, {keyframes} from 'styled-components';\n\n// export const ModalCover = styled.div`\n//     height: 100vh;\n//     width: 100vw;\n//     background-color: black;\n//     opacity: .2;\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     position: fixed;\n//     transform: ${props => !props.taskModal && 'translateX(-125vw)'};\n//     transition: transform .3s ease-in-out;\n// `\nexport const Modal = styled.div`\n    height: 285px;\n    width: 90vw;\n    background-color: white;\n    border: 1px solid black;\n    position: fixed;\n    box-sizing: border-box;\n    transform: ${props => !props.taskModal && 'translateX(-125vw)'};\n    transition: transform .3s ease-in-out;\n    z-index: 2;\n    @media (min-width: 800px) {\n        width: 800px;\n    }\n`\n\nexport const ModalWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 16px;\n`\n\nexport const CategoryWrapper = styled.div`\n    display: flex;\n    margin-bottom: 10px;\n`\nexport const PriorityWrapper = styled.div`\n    display: flex;\n    margin-bottom: 10px;\n`\nexport const DescriptionWrapper = styled.div`\n\n`\nexport const InfoWrapper = styled.div`\n\n`\nexport const ButtonWrapper = styled.div`\n\n`\nexport const ModalButton = styled.button`\n    width: 100px;\n    height: 30px;\n    border-radius: 4px;\n    background-color: #039EFC;\n    &:disabled{\n        background-color: lightgray;\n    }\n`\nexport const InputText = styled.p`\n    font-size: 16px;\n`\nexport const InputBox = styled.input`\n    height: ${props => props.height ? props.height : 'initial'};\n    width: ${props => props.width ? props.width : 'initial'};\n`\nexport const TextBox = styled.textarea`\n    border: 1px solid black;\n    height: ${props => props.height ? props.height : 'initial'};\n    width: ${props => props.width ? props.width : 'initial'};\n    resize: none;\n`\nexport const SelectWrapper = styled.select`\n    width: 75px;\n    padding-left: 5px;\n    margin-left: 10px;\n`\nexport const Option = styled.option`\n\n`","import React, { Component } from 'react';\nimport {Modal, ModalForm, ModalWrapper, CategoryWrapper, DescriptionWrapper, InfoWrapper, ButtonWrapper, ModalButton, InputText, InputBox, SelectWrapper, Option, PriorityWrapper, TextBox} from './styled-components/TaskModal';\n\nclass TaskModal extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            taskCategories: ['Work', 'Personal', 'Shopping'],\n            priorities: ['Low', 'Medium', 'High'],\n        }\n    }\n    \n    render(){\n        let {category, priority, update, task, info} = this.props;\n        return(\n            <Modal taskModal={this.props.taskModal} className=\"modal\">\n                <ModalWrapper className=\"modal-wrapper\">\n                    <CategoryWrapper className=\"category-wrapper\">\n                        <InputText className=\"input-text\">Category: </InputText>\n                        <SelectWrapper \n                            className=\"select-wrapper\"\n                            value={this.props.category} \n                            name=\"category\" \n                            onChange={(e) => this.props.handleChange(e)}>\n                            <Option defaultValue=\"\" disabled hidden/>\n                            {this.state.taskCategories.map((e, i) => {\n                                return <Option key={i}>{e}</Option>\n                            })}\n                        </SelectWrapper>\n                    </CategoryWrapper>\n                    <PriorityWrapper className=\"priority-wrapper\">\n                        <InputText className=\"input-text\">Priority: </InputText>\n                        <SelectWrapper \n                            className=\"select-wrapper\"\n                            value={this.props.priority} \n                            name=\"priority\" \n                            onChange={(e) => this.props.handleChange(e)}>\n                            <Option defaultValue=\"\" disabled hidden/>\n                            {this.state.priorities.map((e,i) => {\n                                return <Option key={i}>{e}</Option>\n                            })}\n                        </SelectWrapper>\n                    </PriorityWrapper>\n                    <DescriptionWrapper className=\"description-wrapper\">\n                        <InputText className=\"input-text\">Task: </InputText>\n                        <TextBox \n                            className=\"input-box\"\n                            value={this.props.task} \n                            name=\"task\" \n                            width={'100%'} \n                            height={'16px'}\n                            onChange={(e) => this.props.handleChange(e)}/>\n                    </DescriptionWrapper>\n                    <InfoWrapper className=\"info-wrapper\">\n                        <InputText className=\"input-text\">Additional Info</InputText>\n                        <TextBox \n                            className=\"text-box\" \n                            value={this.props.info} \n                            name=\"info\" \n                            height={\"100px\"} \n                            width={'100%'} \n                            onChange={(e) => this.props.handleChange(e)}/>\n                    </InfoWrapper>\n                    <ButtonWrapper className=\"button-wrapper\">\n                        {this.props.update ? \n                            <ModalButton className=\"submit\" disabled={!category || !task || !priority ? true : false} onClick={this.props.handleUpdate}>\n                            Update Task\n                            </ModalButton> :\n                            <ModalButton className=\"update\" disabled={(!category || !task || !priority ? true : false)} onClick={this.props.handleSubmit}>\n                            Add Task\n                            </ModalButton>}\n                        {this.props.update && <ModalButton onClick={this.props.handleDelete}>Delete</ModalButton>}\n                    </ButtonWrapper>\n                </ModalWrapper>\n            </Modal>\n        )\n    }\n}\n\nexport default TaskModal;","import styled from 'styled-components';\n\nexport const TaskListWrapper = styled.div`\n    min-height: calc(100vh - 100px);\n    max-width: 800px;\n    width: 100%;\n    background: lightgray;\n`\n\nexport const TaskWrapper = styled.div`\n    box-sizing: border-box;\n    height: 35px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    /* padding: 0 10px; */\n`\nexport const TaskInfoWrapper = styled.div`\n    width: 100%;\n    cursor: pointer;\n    display: flex;\n`\nexport const TaskText = styled.p`\n    line-height: 35px;\n    margin-left: 10px;\n    width: calc(100vw - 168px);\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media (min-width: 450px) {\n        width: calc((100vw - 178px)/2);\n    }\n    @media (min-width: 800px) {\n        width: calc((800px - 178px)/2);\n    }\n`\nexport const CategoryText = styled.p`\n    width: 72px;\n    line-height: 35px;\n    margin-left: 10px;\n`\nexport const InfoText = styled.p`\n    line-height: 35px;\n    margin-left: 10px;\n    width: calc((100% - 106px)/2);\n    display: none;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    @media (min-width: 450px) {\n        display: block;\n        width: calc((100vw - 178px)/2);\n    }\n    @media (min-width: 800px) {\n        width: calc((800px - 178px)/2);\n    }\n`\nexport const TaskLabel = styled.label`\n    display: flex;\n    margin-left: 10px;\n`\nexport const HeaderWrapper = styled.div`\n    height: 35px;\n    background-color: lightgray;\n    display: flex;\n`\nexport const CategoryHeader = styled.div`\n    margin-left: 76px;\n    width: 72px;\n    line-height: 35px;\n    border-bottom: 1px solid;\n`\nexport const TaskHeader = styled.div`\n    width: calc(100vw - 168px);\n    line-height: 35px;\n    margin-left: 10px;\n    border-bottom: 1px solid;\n    @media (min-width: 450px) {\n        width: calc(50% - 89px);\n    }\n`\nexport const InfoHeader = styled.div`\n    /* width: calc((100% - 197px)/2); */\n    line-height: 35px;\n    margin-left: 10px;\n    display: none;\n    border-bottom: 1px solid;\n    @media (min-width: 450px) {\n        display: block;\n        width: calc(50% - 89px);\n    }\n`","import React, { Component } from 'react';\nimport {TaskListWrapper, TaskWrapper, TaskText, TaskInfoWrapper, TaskLabel, CategoryText, InfoText, HeaderWrapper, CategoryHeader, InfoHeader, TaskHeader} from './styled-components/TaskList';\nimport Switch from \"react-switch\";\n\nclass TaskList extends Component{\n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <TaskListWrapper className=\"task-list-wrapper\">\n                <HeaderWrapper className=\"header-wrapper\">\n                    <CategoryHeader className=\"category-header\">Category</CategoryHeader>\n                    <TaskHeader className=\"task-header\">Task</TaskHeader>\n                    <InfoHeader className=\"info-header\">Additional Info</InfoHeader>\n                </HeaderWrapper>\n                {this.props.taskArr.map((e,i) => {\n                    return(\n                        <TaskWrapper className=\"task-wrapper\" name={e.id} /*onClick={() => this.props.taskClick(e.id)}*/>\n                            <TaskLabel className=\"task-label\">\n                                <Switch \n                                    id={e.id}\n                                    onChange={this.props.handleToggleCheck} \n                                    checked={e.complete} />\n                            </TaskLabel>\n                            <TaskInfoWrapper \n                                className=\"task-info-wrapper\"\n                                onClick={() => this.props.taskClick(e.id)}>\n                                <CategoryText className=\"category-text\">{e.category}</CategoryText>\n                                <TaskText className=\"task-text\">{e.task}</TaskText>\n                                <InfoText className=\"info-text\">{e.info}</InfoText>\n                            </TaskInfoWrapper>\n                        </TaskWrapper>\n                    )\n                })}\n            </TaskListWrapper>\n        )\n    }\n}\n\nexport default TaskList","import React, { Component } from 'react';\n// import axios from 'axios';\nimport axios from 'axios';\nimport {AppWrapper, TaskCover} from './components/styled-components/App';\nimport Navbar from './components/Navbar';\nimport TaskModal from './components/TaskModal';\nimport TaskList from './components/TaskList';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            taskModal: false,\n            taskArr: [],\n            category: '',\n            priority: '',\n            task: '',\n            info: '',\n            id: '',\n            update: false\n        }\n    }\n    componentDidMount(){\n        axios.get('/getDataArr').then(res => this.setState({taskArr: res.data}))\n    }\n\n    toggleModal = () => this.setState({\n        taskModal: !this.state.taskModal,\n        category: '',\n        priority: '',\n        info: '',\n        task: '',\n        id: '',\n        update: false\n    })\n\n    handleChange = (event) => {this.setState({[event.target.name]: event.target.value});}\n\n    handleSubmit = (event) => {\n            let {category, priority, info, task, taskArr} = this.state;\n            axios.post('/addTask', {category, priority, info, task, complete: false}).then(res => {\n                this.setState({\n                    taskArr: res.data,\n                    category: '',\n                    priority: '',\n                    info: '',\n                    task: ''\n                })\n            })\n            this.toggleModal();\n            event.preventDefault();\n    }\n    handleToggleCheck = (checked, event , id) => {\n        axios.post('/toggleTask', {id, checked}).then(res => this.setState({taskArr: res.data}))\n    }\n    handleUpdate = () => {\n        let {id, task, info, priority, category} = this.state;\n        axios.post('/updateTask', {id, task, info, priority, category}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    handleDelete = () => {\n        axios.post('/deleteTask', {id: this.state.id}).then(res => {\n            this.toggleModal();\n            this.setState({\n                taskArr: res.data,\n                category: '',\n                priority: '',\n                info: '',\n                task: '',\n                id: '',\n                update: false\n            })\n        })\n    }\n    taskClick = (id) => {\n        let arr = this.state.taskArr.filter((el) => el.id === id)\n            this.setState({\n                category: arr[0].category,\n                priority: arr[0].priority,\n                task: arr[0].task,\n                info: arr[0].info,\n                id: arr[0].id,\n                update: true\n            }, this.toggleModal())\n    }\n    render(){\n        return(\n        <AppWrapper className=\"app-wrapper\">\n            <TaskCover \n                className=\"task-cover\"\n                onClick={this.toggleModal}\n                taskModal={this.state.taskModal}/>\n            <TaskModal \n                className=\"task-modal\"\n                {...this.state} \n                toggle={this.toggleModal} \n                handleChange={this.handleChange} \n                handleSubmit={this.handleSubmit} \n                handleUpdate={this.handleUpdate}\n                handleDelete={this.handleDelete}/>\n            <Navbar className=\"navbar\" toggle={this.toggleModal}/>\n            <TaskList \n                className=\"task-list\" \n                taskArr={this.state.taskArr} \n                taskClick={this.taskClick}\n                handleToggleCheck={this.handleToggleCheck}/>\n        </AppWrapper>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}